# SERVICES

- sometimes it isn't a thing
- some operations don't belong to any object

- common mistake: too fast putting operations in services
- bladem jest tez pchanie metod do obiektow ktore nie naleza do nich

- service dzialaja zwykle na wielu obiektach
- g: met. obiektu pracuje w jego ctx

- service nie ma stanu
- g: bo nie sa przypisane do obiektu

- nazwa klasy/operations - pochodza z UL
- service name to raczej activity [nie noun]
- params and results use domain objects
- operacje sa elementem domeny


## 1 SERVICES AND ISOLATED DOMAIN LAYOER


sa rozne service [in app]
- domenowe
- tech
  - aplikacyjne
  - infrastruktury

- technical services can't have any business logic

sample: transfer pieniedzy
- transfer to oper robiona na 2 obiektach [kontach]
- stad impl. w domain service


## 2 GRANULARITY


- glowne zastosowanie s = modelowanie zachowan
- dodatkowe = hiding details, decoupling clients from domain details [e,vo ..]

'graining levels'
- medium-grained service - hides complex flow behind simple method
- fine-grained access to domain - leaks knowlege to caller side


## 3 ACCESS TO SERVICES


- s to proste obiekty: interfaces and implementations
- nie trzeba corba, j2ee ...