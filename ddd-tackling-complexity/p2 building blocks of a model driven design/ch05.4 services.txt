# SERVICES


- sometimes it isn't a thing
- some operations don't belong to any object

common mistakes
- too fast putting operations into services
- dodawanie metod do obiektow gdzie one nie pasuja

- service dzialaja zwykle na wielu obiektach
// g: a metody obiektu pracuja w jego ctx

- service nie ma stanu
// g: bo nie dziala w ctx obiektu

- nazwa klasy/metod - pochodza z UL
- service name to raczej activity [nie noun] AccountChecker
- params and results use domain objects
- operacje sa elementem domeny


## 1 SERVICES AND ISOLATED DOMAIN LAYER


sa rozne services [in app]
- domenowe
- tech
  - aplikacyjne
  - infrastruktury

- tech services can't have any business logic

sample: transfer pieniedzy
- transfer to oper robiona na 2 obiektach [kontach]
- stad impl. w domain service


## 2 GRANULARITY


- glowne zastosowanie s = modelowanie zachowan
- dodatkowe = hiding details, decoupling clients from domain details [e,vo ..]

'graining levels'
- medium-grained service - hides complex flow behind simple method
- fine-grained access to domain - allow leaking knowlege to caller side


## 3 ACCESS TO SERVICES


- s to proste obiekty: interfaces and implementations
- nie trzeba heavy infra: corba, j2ee ...