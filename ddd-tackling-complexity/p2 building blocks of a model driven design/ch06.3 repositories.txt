# REPOSITORIES


ways to access to object
- wyszukanie [repo], stworzenia [factory]
- travers po asocjacji [z innego obj]

// g
- e moze miec rozne postacie [class, db-row ..] i miejsce zapisu [db, vm0 ..] i w jakiej postaci masz e 
- nieazleznie od formy - jest to e

klient nie moze
- za duzo traversowania po assocjacjach -> it muddles the model
- direct db access -> nie bedzie uzywal aggs do zmiany data
  
- AGG INTERNALS [E/VO] CAN BE ACCESSED ONLY BY TRAVERS [FROM THE ROOT]
- ROOTS CAN'T BE ACCESSED BY TRAVERSAL - BUT BY REPO

- repo resp = remove from model techs regarding reading/saving data

- w modelu mamy tylko interface
- klient szuka wg params [w postaci obiektow modelu]
- result tez jest obiektem modelu

repo moze zwrocic
- particular object[s]
- summary information [eg. recap data from few objects]
- calculations on objects
- ...

factory vs repo
- f tworzy obiekty - ktore sa w mem [nie sa stored yet]
- r zapisuje obiekty z pamieci do store'a lub czyta ze store do pamieci [reconstitute]

- provide repos to access only agg roots

- btw: repos ulatwiaja testowanie kodu [w miejsce heavy repo infra wstaw mock]


## 1 QUERYING A REPO


metoda searching by
- id - moze zwrocic 1 obj
- any attr - moze zwrocic many objs
  
- if repo returns calculations - then usually these calcs are done by underlying db

repos can search by
- simple attrs
- specifacation based queries [EE patt]
  eg. TradeOrderRepo.matching(Criteria c)
- ...


## 2 CLIENT CODE IGNORES REPO IMPL; DEVS DO NOT


// big cut
- in short: devs should understand how repos work - to use it optimally
- eg: don't fetch all objs from db by repo and iterate through


## 3 IMPL A REPO


- many possibilities of impling
- id deps on underlying tech [mem, db, file ..]


recoms
- leave tx control to the client [don't commit after save to repo ...]
- client does commit - cause
  - client can use many repos, do many changes
  - do 1 commit for all changes
- nie koduj tx w repo - beda prostsze
  - i repos
  - i tx'y


## 4 WORKING WITH YOUR FRAMEWORK


fmk moze wspierac lub byc totalnie wspak - tworzeniu repos

c: 
- entity z old ejb != e from ddd
- ejb home z old j2ee wyglada jak repo = ale to kompletnie co innego


DON'T FIGHT YOUR FRAMEWORKS!!!!!!!
// g: dotyczy to tez robienie immutable vo w Realm [Realm tego nie ma i tyle]


## 5 THE RELATIONSHIP WITH FACTORIES


- f handles beginning of objects L
- r ...     middle/end ...

- r during reconstituting creates object
- many consider r as kind of f
  - from tech PoV it's ok
  - from model PoV - reconstitution is NOT creation [conceptualy 1 is existing, 1 is new obj]

- teoretycznie r moglo by uzywac f do reconst. obiektow - ale to rzadka praktyka

rozdzielenie r and f - separuje responsibilities
- f - tylko tworzy nowe obiekty
- r - zapisuje/czytuje store'a

findOrCreate
- some are mixing f and r and create method "findOrCreate"
- to absurd, niepotrzebne przy uzywaniu e-s/vo-s