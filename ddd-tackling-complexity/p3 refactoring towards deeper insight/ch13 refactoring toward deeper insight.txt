ch13 refactoring toward deeper insight


[remind] glowne pts w drodze do deeper model
- live in the domain
- look at things from diff PoV
- continueous dialog with experts

n: w/w to 'miekkie wymagania' [nie techniczne] - sa top w deeping model

n: ch13 to podsumowanie "p3 refactoring towards deeper insight" - pewne rzeczy sie powtarzaja


ch13.1 initiation


[cut]
ee mowi co moze byc initem do zmian w modelu:
- niestrawnosci/sniespojnosci/nauczenie sie czegos nowego/ ... [bylo 'all' wczesniej]


ch13.2 exploration teams


zmiany w modelu moga byc
- male - kilka godzin pracy 1 osoby
- wieksze - "duuuzo czasu" wielu osob

ee suggest
- inicjator zmiany buduje zespol: 4-5 osob ktore znaja problem || expert doemenowy || dobrze modeluja ... [zalezy od potrzeb]
- grupa robi BS przez 0.5 - 1.5 h
  - rozpisuja scenariusze
  - buduja nowy model
- wynik sesji - jesli uwazaja za 
  - dobry - zaczynamy kodowac
  - zly - dajemy sobie kilka dni na przemyslenia i powtarzamy sesje
  
exploration b. practicies
- scope and sleep - rob krotkie meeting'i przez kilka dni [niz 1 duzy i zakonczyc na stack'u]
- exercise UL - cwicz rozne scenariusze na UL

c: wg EE 'brainstorming session' is unstructured, dynamic and ... mega productive ;]
// gt: do lot of BS with others, always, with anyone!!!!!


ch13.3 prior art


[cut]


ch13.4 a design for developers


[cut]
- in short: use supple design
c: wg EE: software is for user but also for developers!!!
- bo devs tez sa "user'ami softu": dodaja nowe feats, refactor old ...

supple design pros
- easy to anticipate effect of running code
- ...                consequences of changing the code
- low mental overload - przez reducing deps [single class] and side-effects


ch13.5 timing


- c: wg EE jesli czekasz ze zmiana az bedzie ona w pelni uzasadniona - to czekasz za dlugo

- cont. refactoring considered as best practice = caly czas refactor'uj
  - chodzi glownie o r toward deeper insight
  - acz tech. refactory tez sa wazne
- c: wiekszosc zespolow jest zbyt ostrozna z r

kiedy musisz r-owac
- design nie pokazuje aktualnego zrozumienia domeny
- wazne concepts sa implicit
- widzisz mozliwosc r waznej czesci modelu na latwiejsza w uzyciu

w/w to dosc agresywne podejscie do r
nie zawsze warto tak ostro do tematu podchodzic ;]
np. odpusc se kilka dni przed release, sa watpliwosci do nowego modelu, ...


ch13.6 crisis as opportunity


w sw jak w ewolucji
- wiekszosc czasu jest normalne, powolny rozwoj
- nagle nastepuje ostra zmiana

- to zwykle wyglada bardziej jak crisis [a nie opportunity]
- ale trzeba sie z tym zmierzyc