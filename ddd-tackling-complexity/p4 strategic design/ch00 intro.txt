- w skomplikowanym systemie nie da sie znac kazdy szczegol
- we need techs to understand big models/complex domains
- p4 says about it

- tu wiekszosc decyzji musi byc ustalona na poziomie zespolu lub miedzy zespolami

- model duuuzego przedsiewziecia - nie da sie pokazac jako single unit
- system musi byc podzielony na mniejsce na poziomie
  - koncepcji
  - implementacji [tak, impl tez ;]

- wazne by miec modularity without loosing benefits of integration
- moduly maja byc wyseparowane i jednoczesnie musza dobrze wspolpracowac

- single big model bedzie nieporeczny, bedzie mial duzo contradictions, duplications ...
- ale tez zbyt rozdrobnione system na moduly - bez zapewnienia integracji 
  - nie bedzie dostarczal enterprise level answers
  - beda consistency problems in 'integration points'
  
celem strategic design principles jest
- redukcja zaleznosci miedzy partami systemu
- utrzymanie interoperatibility miedzy ...

strategic design principles
- context 
  - the most fundamental principle
  - dobry model [small or big] musi byc wewn. spojny, bez sprzecznych definicji
  - wyznacz BC wewn. ktorego zbudujesz spojny model
- [strategic] distillation
  - redukuje balagan i fokusuje na waznych elementach
  - czesty problem: wysilek jest wkladany w poboczne domeny, a musimy zrobic focus na top imp. stuff
  - tu mamy "core domain" ktory dzieki 'czystosci/fokusowi' -> lepiej zaprojektuejy
  - 2nd'ary sa 'supporting elements [domains]'
- large scale structures
  - ee soon pokarze LSS [da poglad w temat] a w detalach omowi tylko 1 of LSS = 'responsibility layers'
  - c: nie ma katalogu LSS - to trzeba wymyslac on-demand/case